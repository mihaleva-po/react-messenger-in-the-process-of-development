{"version":3,"file":"static/js/911.c5736fad.chunk.js","mappings":"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","sources":["Hoc/withAuthNavigate.jsx","webpack://name_site/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://name_site/./src/components/Profile/MyPosts/MyPost.module.css?8a86","webpack://name_site/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://name_site/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.js","utils/validators/validators.js"],"sourcesContent":["import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForNavigate)(NavigateComponent);\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"desc\":\"ProfileInfo_desc__txaWR\",\"img\":\"ProfileInfo_img__umcSJ\",\"info\":\"ProfileInfo_info__T6WYn\",\"photoProfile\":\"ProfileInfo_photoProfile__7npiM\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(!editMode)\r\n                ?\r\n                <div>\r\n                    <span\r\n                        onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                        value={status}\r\n                    />\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport cl from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport person from \"../../../assets/image/Users/person.png\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = ({profile, savePhoto, ...props}) => {\r\n    if (!profile) {\r\n        return <Preloader/>;\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.file.length) {\r\n            savePhoto(e.target.file[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={cl.info}>\r\n            <div className={cl.desc}>\r\n                Name: {profile.fullName}\r\n                <div>\r\n                    <img className={cl.photoProfile} src={profile.photos.large || person} alt={\"\"}/>\r\n\r\n                    {props.isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n\r\n                <ProfileStatusWithHook status={props.status}\r\n                                       updateStatus={props.updateStatus}\r\n                />\r\n\r\n                <div>\r\n                    {!profile.aboutMe ? null : <div>About me: {profile.aboutMe}</div>}\r\n                    {!profile.lookingForAJob ? <div>Looking for a job: No</div> : <div>Looking for a job: Yes</div>}\r\n                    {!profile.lookingForAJobDescription ? null :\r\n                        <div>Looking for a job description: {profile.lookingForAJobDescription}</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"myPost\":\"MyPost_myPost__m9Kb2\",\"post\":\"MyPost_post__qzWDD\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__4b7IX\",\"post\":\"Post_post__r2w1I\",\"like\":\"Post_like__waR61\"};","import cl from './Post.module.css';\r\nimport avatar from './../../../../assets/image/ava.jpg';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={cl.item}>\r\n            <img alt='' src={avatar}/>\r\n            <div className={cl.post}>\r\n                {props.post}\r\n            </div>\r\n            <div className={cl.like}>\r\n                Like: &nbsp; {props.countLike}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n\r\n","import cl from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {\r\n    maxLengthCreator,\r\n    minLengthCreator,\r\n    required\r\n} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postElement = props.profilePage.posts.map(p =>\r\n        (<Post post={p.post} countLike={p.countLike} key={p.id}/>)\r\n    );\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.myPost);\r\n    }\r\n    return (\r\n        <div className={cl.myPost}>\r\n            <h3>My posts </h3>\r\n            <MyPostForm onSubmit={addPost}/>\r\n            <div className={cl.post}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n})\r\n\r\nconst maxLength15 = maxLengthCreator(100);\r\nconst minLength2 = minLengthCreator(1);\r\n\r\nconst FormMyPost = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name={\"myPost\"}\r\n                       placeholder=\"Поделитесь своими мыслями..\"\r\n                validate={[required, maxLength15, minLength2]}/>\r\n            </div>\r\n            <div>\r\n                <button> Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostForm = reduxForm({form: \"myPost\"})(FormMyPost);\r\n\r\nexport default MyPosts;","import {\r\n    addPost,\r\n} from \"../../../redux/profilePageReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet dataOfState = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(dataOfState, {\r\n    addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","\r\n// import cl from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} isOwner={props.isOwner}\r\n            updateStatus={props.updateStatus}  savePhoto={props. savePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfileUser,\r\n    getUserStatus, savePhoto,\r\n    setUserProfile,\r\n    updateStatus\r\n} from \"../../redux/profilePageReducer\";\r\nimport {connect} from 'react-redux';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {withAuthNavigate} from \"../../Hoc/withAuthNavigate\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    const params = useParams();\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            params={params}\r\n        />\r\n    );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfileUser(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.params.userId !== prevProps.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     isOwner={!this.props.params.userId}\r\n                     />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(connect(mapStateToProps,\r\n        {setUserProfile, getProfileUser, getUserStatus, updateStatus,  savePhoto}),\r\n    withRouter,\r\n    withAuthNavigate\r\n)(ProfileContainer);","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"FormsControls_textarea__EajXd\",\"error\":\"FormsControls_error__p2q5Z\",\"rememberMe\":\"FormsControls_rememberMe__W46IN\"};","import React from \"react\";\r\nimport cl from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormsControls = ({children}) => {\r\n    const hasError = children.props.touched && children.props.error;\r\n    return (\r\n        <div className={hasError ? cl.error : undefined}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError ? <span> {children.props.error} </span> : undefined}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    return <FormsControls>\r\n        <textarea {...input} {...meta} {...props} className={cl.textarea}/>\r\n    </FormsControls>\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    return <FormsControls>\r\n        <input {...input} {...meta} {...props} />\r\n    </FormsControls>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validate, props = {}, text=\"\") => (\r\n    <div className={cl.rememberMe}>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validate}\r\n            {...props}/> {text}\r\n    </div>\r\n)","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => value && value.length <= maxLength ?\r\n        undefined : `Must be ${maxLength} characters or less`;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => value =>\r\n    value && value.length >= minLength ?\r\n    undefined : `Must be ${minLength} characters or more`;"],"names":["mapStateToPropsForNavigate","state","isAuth","auth","withAuthNavigate","Component","NavigateComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","_jsx","_objectSpread","Navigate","to","React","connect","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","children","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","_ref","profile","savePhoto","_objectWithoutProperties","_excluded","Preloader","className","cl","_jsxs","fullName","src","photos","large","person","alt","isOwner","type","target","file","length","ProfileStatusWithHook","aboutMe","lookingForAJob","lookingForAJobDescription","avatar","post","countLike","MyPosts","postElement","profilePage","posts","map","p","Post","id","MyPostForm","onSubmit","values","addPost","myPost","maxLength15","maxLengthCreator","minLength2","minLengthCreator","reduxForm","form","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","ProfileInfo","MyPostsContainer","ProfileContainer","userId","params","authorizedUserId","getProfileUser","getUserStatus","refreshProfile","prevProps","prevState","snapshot","Profile","compose","setUserProfile","WrappedComponent","useParams","FormsControls","hasError","touched","error","undefined","_ref2","input","meta","Input","_ref3","_excluded2","createField","text","maxLength","concat","minLength"],"sourceRoot":""}